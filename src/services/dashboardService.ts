import { api } from './api'

export interface DashboardStats {
  laboratorios: {
    total: number
    activos: number
  }
  docentes: {
    total: number
    porEscuela: Array<{
      escuela: string
      cantidad: number
    }>
  }
  horarios: {
    total: number
    hoy: number
    estaSemana: number
    porLaboratorio: Array<{
      laboratorio: string
      cantidad: number
    }>
  }
  insumos: {
    total: number
    conStock: number
    sinStock: number
    porLaboratorio: Array<{
      laboratorio: string
      cantidad: number
    }>
  }
}

export const dashboardService = {
  // Obtener estad√≠sticas generales del dashboard
  getStats: async (): Promise<{ success: boolean; data?: DashboardStats; message?: string }> => {
    try {
      console.log('üîç Cargando estad√≠sticas del dashboard desde endpoint optimizado...')

      // ‚úÖ RUTA CORREGIDA: sin /api/ porque baseURL ya lo incluye
      const response = await api.get('/dashboard/stats')
      
      if (response.data.success) {
        console.log('‚úÖ Estad√≠sticas cargadas exitosamente:', response.data.data)
        return {
          success: true,
          data: response.data.data
        }
      } else {
        console.error('‚ùå Error en la respuesta del servidor:', response.data.message)
        return {
          success: false,
          message: response.data.message || 'Error al cargar estad√≠sticas'
        }
      }

    } catch (error: any) {
      console.error('‚ùå Error de conexi√≥n al obtener estad√≠sticas del dashboard:', error)
      
      // Mensaje m√°s espec√≠fico seg√∫n el tipo de error
      let message = 'Error al cargar estad√≠sticas del dashboard'
      if (error.response?.status === 401) {
        message = 'Sesi√≥n expirada. Por favor, inicia sesi√≥n nuevamente.'
      } else if (error.response?.status === 403) {
        message = 'No tienes permisos para ver estas estad√≠sticas.'
      } else if (error.response?.status >= 500) {
        message = 'Error interno del servidor. Intenta nuevamente.'
      } else if (error.code === 'NETWORK_ERROR') {
        message = 'Error de conexi√≥n. Verifica tu internet.'
      }

      return {
        success: false,
        message: message
      }
    }
  },

  // Funci√≥n de debug temporal
  debug: async () => {
    try {
      console.log('üîß Ejecutando debug del dashboard...')
      
      // ‚úÖ RUTA CORREGIDA: sin /api/ porque baseURL ya lo incluye
      const response = await api.get('/dashboard/debug')
      console.log('üîß Resultado del debug:', response.data)
      return response.data
    } catch (error: any) {
      console.error('‚ùå Error en debug:', error)
      return { 
        success: false, 
        message: error.response?.data?.message || error.message,
        error: error.response?.data
      }
    }
  }
} 